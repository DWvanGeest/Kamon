# ==================================== #
# kamon-statsD Reference Configuration #
# ==================================== #

kamon {
  statsd {

    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "127.0.0.1"
    port = 8125

    # Max packet size for UDP metrics data sent.
    max-packet-size = 1024 bytes

    # All time values are collected in nanoseconds,
    # to scale before sending to StatsD set "time-units" to "s" or "ms" or "Âµs".
    # Value "n" is equivalent to omitting the setting
    time-unit = "ms"

    # All memory values are collected in bytes,
    # to scale before sending to statsd set "memory-units" to "gb" or "mb" or "kb".
    # Value "b" is equivalent to omitting the setting
    information-unit = "b"

    # FQCN of the implementation of `kamon.statsd.MetricKeyGenerator` to be instantiated and used for assigning
    # metric names. The implementation must have a single parameter constructor accepting a `com.typesafe.config.Config`.
    metric-key-generator = kamon.statsd.SimpleMetricKeyGenerator

    simple-metric-key-generator {

      # Indicates whether to include the hostname in the generated metric name. The generated metric names follow this
      # format:
      #    service-name[.host-name].metric-name[.tag1-key.tag1-value][.tag2-key.tag2-value]...
      include-hostname = true

      # Enable of disable including environment tags
      include-environment-tags = true

      # When the sections that make up the metric names have special characters like dots (very common in dispatcher
      # names) or forward slashes (all actor metrics) we need to sanitize those values before sending them to StatsD
      # with one of the following strategies:
      #   - normalize: changes ': ' to '-' and ' ', '/' and '.' to '_'.
      #   - percent-encode: percent encode the section on the metric name. Please note that StatsD doesn't support
      #     percent encoded metric names, this option is only useful if using our docker image which has a patched
      #     version of StatsD or if you are running your own, customized version of StatsD that supports this.
      metric-name-normalization-strategy = normalize
    }
  }

  modules {
    statsd-reporter {
      enabled = true
      name = "StatsD Reporter"
      description = "StatsD Reporter"
      factory = "kamon.statsd.StatsDReporter$Factory"
    }
  }
}
