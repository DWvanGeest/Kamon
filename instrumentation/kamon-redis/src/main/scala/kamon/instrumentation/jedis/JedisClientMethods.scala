package kamon.instrumentation.jedis

object JedisClientMethods {
  val commands = Set(
    "set",
    "get",
    "copy",
    "ping",
    "getDel",
    "getEx",
    "exists",
    "del",
    "unlink",
    "type",
    "keys",
    "randomKey",
    "rename",
    "renamenx",
    "expire",
    "expireAt",
    "ttl",
    "touch",
    "move",
    "getSet",
    "mget",
    "setnx",
    "setex",
    "mset",
    "msetnx",
    "decrBy",
    "decr",
    "incrBy",
    "incrByFloat",
    "incr",
    "append",
    "substr",
    "hset",
    "hget",
    "hsetnx",
    "hmset",
    "hmget",
    "hincrBy",
    "hincrByFloat",
    "hexists",
    "hdel",
    "hlen",
    "hkeys",
    "hvals",
    "hgetAll",
    "hrandfield",
    "hrandfieldWithValues",
    "rpush",
    "lpush",
    "llen",
    "lrange",
    "ltrim",
    "lindex",
    "lset",
    "lrem",
    "lpop",
    "lpos",
    "rpop",
    "rpoplpush",
    "sadd",
    "smembers",
    "srem",
    "spop",
    "spop",
    "smove",
    "scard",
    "sismember",
    "sinter",
    "sinterstore",
    "sunion",
    "sunionstore",
    "sdiff",
    "sdiffstore",
    "srandmember",
    "zadd",
    "zaddIncr",
    "zdiff",
    "zdiffWithScores",
    "zdiffStore",
    "zrange",
    "zrem",
    "zincrby",
    "zrank",
    "zrevrank",
    "zrevrange",
    "zrangeWithScores",
    "zrandmember",
    "zrandmemberWithScores",
    "zcard",
    "zrangeWithScores",
    "zscore",
    "zmscore",
    "zpopmax",
    "zpopmin",
    "watch",
    "sort",
    "lmove",
    "blmove",
    "bzpopmax",
    "bzpopmin",
    "zcount",
    "zrangeByScore",
    "zrangeByScoreWithScores",
    "zrevrangeByScore",
    "zrevrangebyscorewithscores",
    "zremrangeByRank",
    "zremrangeByScore",
    "zunion",
    "zunionWithScores",
    "zunionstore",
    "zinter",
    "zinterWithScores",
    "zinterstore",
    "zlexcount",
    "zrangeByLex",
    "zrevrangeByLex",
    "zrangeWithScores",
    "zremrangeByLex",
    "strlen",
    "lpushx",
    "persist",
    "rpushx",
    "echo",
    "linsert",
    "brpoplpush",
    "setbit",
    "getbit",
    "setrange",
    "getrange",
    "configGet",
    "configSet",
    "publish",
    "subscribe",
    "psubscribe",
    "scriptExists",
    "scriptLoad",
    "slowlogGet",
    "objectRefcount",
    "objectEncoding",
    "objectIdletime",
    "objectHelp",
    "objectFreq",
    "bitcount",
    "bitop",
    "sentinelMasters",
    "sentinelGetMasterAddrByName",
    "sentinelReset",
    "sentinelSlaves",
    "sentinelFailover",
    "sentinelMonitor",
    "sentinelRemove",
    "sentinelSet",
    "dump",
    "restore",
    "restoreReplace",
    "pexpire",
    "pexpireAt",
    "pttl",
    "psetex",
    "clientKill",
    "clientGetname",
    "clientList",
    "clientInfo",
    "clientSetname",
    "clientId",
    "clientUnblock",
    "migrate",
    "clusterNodes",
    "readonly",
    "clusterMeet",
    "clusterReset",
    "clusterAddSlots",
    "clusterDelSlots",
    "clusterInfo",
    "clusterGetKeysInSlot",
    "clusterSetSlotNode",
    "clusterSetSlotMigrating",
    "clusterSetSlotImporting",
    "clusterSetSlotStable",
    "clusterForget",
    "clusterFlushSlots",
    "clusterKeySlot",
    "clusterCountKeysInSlot",
    "clusterSaveConfig",
    "clusterReplicate",
    "clusterSlaves",
    "clusterFailover",
    "clusterSlots",
    "asking",
    "pubsubChannels",
    "pubsubNumPat",
    "pubsubNumSub",
    "pfadd",
    "pfcount",
    "pfcount",
    "pfmerge",
    "geoadd",
    "geodist",
    "geohash",
    "geopos",
    "georadius",
    "georadiusReadonly",
    "georadiusStore",
    "georadiusReadonly",
    "georadiusByMember",
    "georadiusByMemberReadonly",
    "georadiusByMember",
    "georadiusByMemberStore",
    "moduleLoad",
    "moduleUnload",
    "moduleList",
    "aclSetUser",
    "aclDelUser",
    "aclGetUser",
    "aclUsers",
    "aclList",
    "aclWhoAmI",
    "aclCat",
    "aclLog",
    "aclGenPass",
    "aclLoad",
    "aclSave",
    "bitfield",
    "bitfieldReadonly",
    "hstrlen",
    "memoryDoctor",
    "memoryUsage",
    "xlen",
    "xrange",
    "xrevrange",
    "xread",
    "xack",
    "xgroupCreate",
    "xgroupSetID",
    "xgroupDestroy",
    "xgroupDelConsumer",
    "xdel",
    "xtrim",
    "xreadGroup",
    "xpending",
    "xclaim",
    "xclaimJustId",
    "xautoclaim",
    "xautoclaimJustId",
    "xinfoStream",
    "xinfoGroup",
    "xinfoConsumers",
    "sendCommand",
    "sendBlockingCommand",
  )
}
