
plugins {
  id 'java'
  id 'maven-publish'
  id 'com.github.johnrengelman.shadow' version '2.0.4'
}

configurations {
  instrumentation
}

repositories {
  mavenLocal()
  mavenCentral()

  maven {
    url  "https://dl.bintray.com/kamon-io/releases"
  }
}

dependencies {
  compile group: 'io.kamon', name: 'kanela-agent', version: '0.0.400'
  compile group: 'io.kamon', name: 'kanela-scala-extension_2.12', version: '0.0.14'

  instrumentation (
      [ group: 'io.kamon', name: 'kamon-logback_2.12',         version: '1.0.3',  transitive: false ],
      //[ group: 'io.kamon', name: 'kamon-scala-future_2.11',   version: '1.0.2', transitive: false ],
      [ group: 'io.kamon', name: 'kamon-scala-future_2.12',    version: '1.0.2',  transitive: false ],
  )
}


task copyInstrumentationsToLib(type: Copy) {
  into "$buildDir/libs/bundle"
  from configurations.instrumentation
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

shadowJar.dependsOn copyInstrumentationsToLib

shadowJar {
  baseName = 'kamon-bundle'
  classifier = null

  mergeServiceFiles {
    path = 'META-INF/services/org.pmw.tinylog.*'
  }

  exclude 'META-INF/services/javax.*'
  exclude 'META-INF/maven/**'
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.RSA'
  exclude 'tinylog.properties'

  doLast {

    // Bundle kamon-modules.
    ant.jar(update: 'true', destfile: shadowJar.archivePath) {
      mappedresources {
        fileset(dir: "$buildDir/libs/bundle")
        globmapper(from: '*', to: 'kanela/agent/instrumentations/*')
      }
    }
  }
}

jar {
  manifest {
    attributes 'Built-By': System.getProperty("user.name")
    attributes 'Build-Jdk': System.getProperty("java.version")
    attributes 'Premain-Class': "kanela.agent.Kanela"
    attributes 'Agent-Class': "kanela.agent.Kanela"
    attributes 'Can-Redefine-Classes': "true"
    attributes 'Can-Set-Native-Method-Prefix': "true"
    attributes 'Can-Retransform-Classes': "true"
  }
}

jar.finalizedBy shadowJar

def pomConfig = {
  licenses {
    license {
      name "The Apache Software License, Version 2.0"
      url "http://www.apache.org/licenses/LICENSE-2.0.txt"
    }
  }
  developers {
    developer {
      id "dpsoft"
      name "Diego Parra"
      url "https://twitter.com/diegolparra"
    }

    developer {
      id "ivantopo"
      name "Ivan Topolnjak"
      url "https://twitter.com/ivantopo"
    }

    developer {
      id "cspinetta"
      name "Cristian Spinetta"
      url "https://twitter.com/c_spinetta"
    }
  }

  scm {
    url "https://github.com/kamon-io/kanela"
  }
}

publishing {
  publications {
    shadowPublication(MavenPublication) { publication ->
      project.shadow.component(publication)
      artifact sourcesJar
      artifact javadocJar
      groupId 'io.kamon'
      artifactId 'kamon-bundle'
      version "${project.version}"
      pom.withXml {
        def root = asNode()
        root.appendNode('description', 'The Kamon Instrumentation Bundle')
        root.appendNode('name', 'Kamon Bundle')
        root.appendNode('url', 'https://kamon.io')
        root.children().last() + pomConfig
      }
    }
  }
}