package kamon.instrumentation.system.process

import kamon.Kamon
import kamon.metric.{InstrumentGroup, MeasurementUnit}
import kamon.tag.TagSet

object ProcessMetrics {

  val ProcessCpu = Kamon.histogram(
    name = "process.cpu",
    description = "Samples the Process CPU usage",
    unit = MeasurementUnit.percentage
  )

  val ULimits = Kamon.gauge (
    name = "process.ulimit",
    description = "Tracks the value of resources limits for the process"
  )

  val ULimitsUsed = Kamon.histogram (
    name = "process.ulimit.used",
    description = "Samples the current resource utilization"
  )

  val Hiccups = Kamon.timer (
    name = "process.hiccup",
    description = "Tracks the process hiccups generated by either garbage collection or OS noise"
  )


  class ProcessInstruments(tags: TagSet) extends InstrumentGroup(tags) {
    val user = register(ProcessCpu, "mode", "user")
    val system = register(ProcessCpu, "mode", "system")
    val combined = register(ProcessCpu, "mode", "combined")

    val openFilesLimit = register(ULimits, "limit", "file-descriptors")
    val openFilesCurrent = register(ULimitsUsed, "limit", "file-descriptors")

    val hiccups = register(Hiccups)
  }
}
